{
    "openapi": "3.0.0",
    "info": {
      "title": "Event Management API",
      "version": "1.0.0",
      "description": "API for managing customers, bookings, events, venues, tickets, orders, payments, and organizers."
    },
    "servers": [
      {
        "url": "https://tiketi-tamasha-server.onrender.com/",
        "description": "Local server"
      }
    ],
    "paths": {
      "/customers": {
        "get": {
          "summary": "List all customers",
          "responses": {
            "200": {
              "description": "A list of customers",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "No customers found"
            }
          }
        },
        "post": {
          "summary": "Create a new customer",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Customer created successfully"
            }
          }
        }
      },
      "/customer/{id}": {
        "get": {
          "summary": "Get a specific customer by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A single customer",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            },
            "404": {
              "description": "Customer not found"
            }
          }
        },
        "put": {
          "summary": "Update a specific customer by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Customer updated successfully"
            },
            "404": {
              "description": "Customer not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a specific customer by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Customer deleted successfully"
            },
            "404": {
              "description": "Customer not found"
            }
          }
        }
      },
      "/bookings": {
        "get": {
          "summary": "List all bookings",
          "responses": {
            "200": {
              "description": "A list of bookings",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Booking"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "No bookings found"
            }
          }
        },
        "post": {
          "summary": "Create a new booking",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Booking created successfully"
            }
          }
        }
      },
      "/events": {
        "get": {
          "summary": "List all events",
          "responses": {
            "200": {
              "description": "A list of events",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Event"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "No events found"
            }
          }
        },
        "post": {
          "summary": "Create a new event",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Event created successfully"
            }
          }
        }
      },
      "/event/{id}": {
        "get": {
          "summary": "Get a specific event by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A single event",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            },
            "404": {
              "description": "Event not found"
            }
          }
        },
        "put": {
          "summary": "Update a specific event by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Event updated successfully"
            },
            "404": {
              "description": "Event not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a specific event by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Event deleted successfully"
            },
            "404": {
              "description": "Event not found"
            }
          }
        }
      },
      "/venues": {
        "get": {
          "summary": "List all venues",
          "responses": {
            "200": {
              "description": "A list of venues",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Venue"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new venue",
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/VenueCreate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Venue created successfully"
            }
          }
        }
      },
      "/venues/{id}": {
        "patch": {
          "summary": "Update a specific venue by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/VenueUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Venue updated successfully"
            }
          }
        },
        "delete": {
          "summary": "Delete a specific venue by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Venue deleted successfully"
            }
          }
        }
      },
      "/tickets": {
        "get": {
          "summary": "List all tickets",
          "responses": {
            "200": {
              "description": "A list of tickets",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Ticket"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new ticket",
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/TicketCreate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Ticket created successfully"
            }
          }
        }
      },
      "/tickets/{id}": {
        "patch": {
          "summary": "Update a specific ticket by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/TicketUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Ticket updated successfully"
            }
          }
        }
      },
      "/orders": {
        "get": {
          "summary": "List all orders",
          "responses": {
            "200": {
              "description": "A list of orders",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new order",
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCreate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Order created successfully"
            }
          }
        }
      },
      "/orders/{id}": {
        "get": {
          "summary": "Get a specific order by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A single order",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found"
            }
          }
        },
        "patch": {
          "summary": "Update a specific order by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/OrderUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Order updated successfully"
            }
          }
        },
        "delete": {
          "summary": "Delete a specific order by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Order deleted successfully"
            }
          }
        }
      },
      "/payments": {
        "get": {
          "summary": "List all payments",
          "responses": {
            "200": {
              "description": "A list of payments",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Payment"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new payment",
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCreate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Payment created successfully"
            }
          }
        }
      },
      "/organizers": {
        "get": {
          "summary": "List all organizers",
          "responses": {
            "200": {
              "description": "A list of organizers",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Organizer"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "No organizers found"
            }
          }
        },
        "post": {
          "summary": "Create a new organizer",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizerCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Organizer created successfully"
            }
          }
        }
      },
      "/organizer/{id}": {
        "get": {
          "summary": "Get a specific organizer by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A single organizer",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Organizer"
                  }
                }
              }
            },
            "404": {
              "description": "Organizer not found"
            }
          }
        },
        "put": {
          "summary": "Update a specific organizer by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizerUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Organizer updated successfully"
            },
            "404": {
              "description": "Organizer not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a specific organizer by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Organizer deleted successfully"
            },
            "404": {
              "description": "Organizer not found"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Customer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "customer_name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            }
          }
        },
        "CustomerCreate": {
          "type": "object",
          "required": ["customer_name", "email", "phone_number", "password"],
          "properties": {
            "customer_name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "CustomerUpdate": {
          "type": "object",
          "properties": {
            "customer_name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "Booking": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "booking_date": {
              "type": "string",
              "format": "date"
            },
            "ticket_id": {
              "type": "integer"
            },
            "customer_id": {
              "type": "integer"
            }
          }
        },
        "BookingCreate": {
          "type": "object",
          "required": ["booking_date", "ticket_id", "customer_id"],
          "properties": {
            "booking_date": {
              "type": "string",
              "format": "date"
            },
            "ticket_id": {
              "type": "integer"
            },
            "customer_id": {
              "type": "integer"
            }
          }
        },
        "Event": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "event_name": {
              "type": "string"
            },
            "event_date": {
              "type": "string",
              "format": "date"
            },
            "event_time": {
              "type": "string",
              "format": "time"
            },
            "description": {
              "type": "string"
            },
            "organizer_id": {
              "type": "integer"
            },
            "venue_id": {
              "type": "integer"
            }
          }
        },
        "EventCreate": {
          "type": "object",
          "required": ["event_name", "event_date", "event_time", "organizer_id", "venue_id"],
          "properties": {
            "event_name": {
              "type": "string"
            },
            "event_date": {
              "type": "string",
              "format": "date"
            },
            "event_time": {
              "type": "string",
              "format": "time"
            },
            "description": {
              "type": "string"
            },
            "organizer_id": {
              "type": "integer"
            },
            "venue_id": {
              "type": "integer"
            }
          }
        },
        "EventUpdate": {
          "type": "object",
          "properties": {
            "event_name": {
              "type": "string"
            },
            "event_date": {
              "type": "string",
              "format": "date"
            },
            "event_time": {
              "type": "string",
              "format": "time"
            },
            "description": {
              "type": "string"
            },
            "organizer_id": {
              "type": "integer"
            },
            "venue_id": {
              "type": "integer"
            }
          }
        },
        "Venue": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "capacity": {
              "type": "integer"
            }
          }
        },
        "VenueCreate": {
          "type": "object",
          "required": ["name", "address", "capacity"],
          "properties": {
            "name": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "capacity": {
              "type": "integer"
            }
          }
        },
        "VenueUpdate": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "capacity": {
              "type": "integer"
            }
          }
        },
        "Ticket": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "price": {
              "type": "number",
              "format": "float"
            },
            "ticket_type": {
              "type": "string"
            },
            "available": {
              "type": "integer"
            }
          }
        },
        "TicketCreate": {
          "type": "object",
          "required": ["price", "ticket_type", "available"],
          "properties": {
            "price": {
              "type": "number",
              "format": "float"
            },
            "ticket_type": {
              "type": "string"
            },
            "available": {
              "type": "integer"
            }
          }
        },
        "TicketUpdate": {
          "type": "object",
          "properties": {
            "price": {
              "type": "number",
              "format": "float"
            },
            "ticket_type": {
              "type": "string"
            },
            "available": {
              "type": "integer"
            }
          }
        },
        "Order": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "customer_id": {
              "type": "integer"
            },
            "order_date": {
              "type": "string",
              "format": "date"
            },
            "total_price": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "OrderCreate": {
          "type": "object",
          "required": ["customer_id", "order_date", "total_price"],
          "properties": {
            "customer_id": {
              "type": "integer"
            },
            "order_date": {
              "type": "string",
              "format": "date"
            },
            "total_price": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "OrderUpdate": {
          "type": "object",
          "properties": {
            "customer_id": {
              "type": "integer"
            },
            "order_date": {
              "type": "string",
              "format": "date"
            },
            "total_price": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "Payment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "payment_date": {
              "type": "string",
              "format": "date"
            },
            "amount": {
              "type": "number",
              "format": "float"
            },
            "order_id": {
              "type": "integer"
            }
          }
        },
        "PaymentCreate": {
          "type": "object",
          "required": ["payment_date", "amount", "order_id"],
          "properties": {
            "payment_date": {
              "type": "string",
              "format": "date"
            },
            "amount": {
              "type": "number",
              "format": "float"
            },
            "order_id": {
              "type": "integer"
            }
          }
        },
        "Organizer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "organizer_name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            }
          }
        },
        "OrganizerCreate": {
          "type": "object",
          "required": ["organizer_name", "email", "phone_number", "password"],
          "properties": {
            "organizer_name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "OrganizerUpdate": {
          "type": "object",
          "properties": {
            "organizer_name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        }
      }
    }
  }